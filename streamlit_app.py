import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime, timedelta
import asyncio
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="AI –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –ü–æ–º–æ—â–Ω–∏–∫",
    page_icon="üéØ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ö–∞—Å—Ç–æ–º–Ω—ã–π CSS
st.markdown("""
<style>
    .main-header {
        font-size: 2.5rem;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 2rem;
        text-align: center;
    }
    .metric-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 1rem;
        border-radius: 10px;
        color: white;
        text-align: center;
    }
    .insight-box {
        background: #f8fafc;
        border-left: 4px solid #10b981;
        padding: 1rem;
        margin: 1rem 0;
        border-radius: 0 8px 8px 0;
    }
    .competitor-card {
        border: 1px solid #e5e7eb;
        padding: 1rem;
        border-radius: 8px;
        margin: 0.5rem 0;
    }
    .success-box {
        background: #dcfce7;
        border: 1px solid #16a34a;
        padding: 1rem;
        border-radius: 8px;
        color: #166534;
    }
    .warning-box {
        background: #fef3c7;
        border: 1px solid #d97706;
        padding: 1rem;
        border-radius: 8px;
        color: #92400e;
    }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown('<h1 class="main-header">üéØ AI –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –û–Ω–ª–∞–π–Ω –®–∫–æ–ª</h1>', unsafe_allow_html=True)
st.markdown('<p style="text-align: center; color: #6b7280; font-size: 1.2rem;">–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ ‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ–∫–ª–∞–º—ã</p>', unsafe_allow_html=True)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.header("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
    with st.expander("üîë API –ö–ª—é—á–∏"):
        fb_token = st.text_input("Facebook Access Token", type="password", help="–¢–æ–∫–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∫–ª–∞–º—ã –≤ Facebook")
        google_token = st.text_input("Google Ads Token", type="password", help="–¢–æ–∫–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ Google –†–µ–∫–ª–∞–º—ã")
        getcourse_token = st.text_input("GetCourse API Key", type="password", help="–ö–ª—é—á –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å GetCourse")
        vk_token = st.text_input("VK Ads Token", type="password", help="–¢–æ–∫–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∫–ª–∞–º—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ")
    
    # –§–∏–ª—å—Ç—Ä—ã –∫–∞–º–ø–∞–Ω–∏–π
    st.header("üìä –§–∏–ª—å—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞")
    date_range = st.date_input(
        "–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞",
        value=[datetime.now() - timedelta(days=30), datetime.now()],
        max_value=datetime.now(),
        help="–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    )
    
    niche_filter = st.selectbox(
        "–ù–∏—à–∞",
        ["–í—Å–µ –Ω–∏—à–∏", "–¶–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–î–∏–∑–∞–π–Ω", "–ë–∏–∑–Ω–µ—Å", "–Ø–∑—ã–∫–∏", "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", "–§–∏—Ç–Ω–µ—Å"]
    )
    
    st.divider()
    
    # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    st.header("‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
    if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"):
        st.success("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
    
    if st.button("üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç"):
        st.info("–û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ email!")

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
col1, col2, col3, col4 = st.columns(4)

# –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –¥–µ–º–æ
sample_metrics = {
    "–¶–µ–Ω–∞ –ª–∏–¥–∞": {"value": "1,250‚ÇΩ", "change": -15, "color": "green"},
    "ROAS": {"value": "320%", "change": 8, "color": "green"}, 
    "CTR": {"value": "2.4%", "change": -5, "color": "red"},
    "–ö–æ–Ω–≤–µ—Ä—Å–∏—è": {"value": "3.2%", "change": 12, "color": "green"}
}

# –ö–∞—Ä—Ç–æ—á–∫–∏ –º–µ—Ç—Ä–∏–∫
for i, (metric, data) in enumerate(sample_metrics.items()):
    with [col1, col2, col3, col4][i]:
        delta_color = "normal" if data["color"] == "green" else "inverse"
        st.metric(
            label=metric,
            value=data["value"],
            delta=f"{data['change']:+}%",
            delta_color=delta_color
        )

st.divider()

# –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
tab1, tab2, tab3, tab4 = st.tabs(["üïµÔ∏è –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤", "üé® –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤", "üìà –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–∞–º–ø–∞–Ω–∏–π", "ü§ñ AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"])

with tab1:
    st.header("üïµÔ∏è –†–∞–∑–≤–µ–¥–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.subheader("üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞")
        competitor_url = st.text_input(
            "–í–≤–µ–¥–∏—Ç–µ URL –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö",
            placeholder="https://example.com –∏–ª–∏ @–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç",
            help="–ú–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–∞–π—Ç, —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö, Facebook –∏–ª–∏ Instagram"
        )
        
        analysis_type = st.selectbox(
            "–¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞",
            ["–ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑", "–¢–æ–ª—å–∫–æ —Ä–µ–∫–ª–∞–º–∞", "–¢–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–Ω—Ç", "–¶–µ–Ω—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"]
        )
        
        if st.button("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞", type="primary"):
            with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞... –≠—Ç–æ –∑–∞–π–º–µ—Ç 1-2 –º–∏–Ω—É—Ç—ã"):
                # –ú–æ–∫-–∞–Ω–∞–ª–∏–∑ - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å MCP –≤—ã–∑–æ–≤
                progress_bar = st.progress(0)
                for i in range(100):
                    progress_bar.progress(i + 1)
                    
                st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
                
                # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞
                competitor_data = {
                    "üí∞ –†–µ–∫–ª–∞–º–Ω—ã–π –±—é–¥–∂–µ—Ç (–æ—Ü–µ–Ω–∫–∞)": "450,000‚ÇΩ/–º–µ—Å—è—Ü",
                    "üì± –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π": "18 –∫–∞–º–ø–∞–Ω–∏–π",
                    "üèÜ –õ—É—á—à–∏–π –∫—Ä–µ–∞—Ç–∏–≤": "–í–∏–¥–µ–æ-–æ—Ç–∑—ã–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞",
                    "üë• –û—Å–Ω–æ–≤–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è": "25-35 –ª–µ—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—ã: –æ–Ω–ª–∞–π–Ω –æ–±—É—á–µ–Ω–∏–µ",
                    "üí≤ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∫–ª–∏–∫–∞": "28‚ÇΩ",
                    "üìä –û—Ü–µ–Ω–∫–∞ –ª–µ–Ω–¥–∏–Ω–≥–∞": "8.7/10",
                    "üéØ –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ": "–û—Å–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –∑–∞ 3 –º–µ—Å—è—Ü–∞",
                    "üìà –î–∏–Ω–∞–º–∏–∫–∞ —Ä–µ–∫–ª–∞–º—ã": "–†–æ—Å—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ +40% –∑–∞ –º–µ—Å—è—Ü"
                }
                
                for key, value in competitor_data.items():
                    st.markdown(f"**{key}:** {value}")
                
                # –ì—Ä–∞—Ñ–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∞
                st.subheader("üìà –î–∏–Ω–∞–º–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞")
                
                # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
                dates = pd.date_range(start=datetime.now()-timedelta(days=30), end=datetime.now(), freq='D')
                activity_data = pd.DataFrame({
                    '–î–∞—Ç–∞': dates,
                    '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã': [20 + i*0.5 + (i%7)*3 for i in range(len(dates))],
                    '–ù–æ–≤—ã–µ –∫—Ä–µ–∞—Ç–∏–≤—ã': [(i%5)+1 for i in range(len(dates))]
                })
                
                fig = px.line(activity_data, x='–î–∞—Ç–∞', y=['–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã', '–ù–æ–≤—ã–µ –∫—Ä–µ–∞—Ç–∏–≤—ã'], 
                             title="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü")
                st.plotly_chart(fig, use_container_width=True)
    
    with col2:
        st.subheader("üèÜ –¢–æ–ø –∫—Ä–µ–∞—Ç–∏–≤—ã –Ω–∏—à–∏")
        
        # –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
        creatives = [
            {"type": "üìπ –í–∏–¥–µ–æ", "engagement": "4,200", "format": "–û—Ç–∑—ã–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞", "platform": "Facebook"},
            {"type": "üñºÔ∏è –ö–∞—Ä—É—Å–µ–ª—å", "engagement": "3,800", "format": "–î–æ/–ü–æ—Å–ª–µ", "platform": "Instagram"},
            {"type": "üñºÔ∏è –û–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "engagement": "2,100", "format": "–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞", "platform": "VK"},
            {"type": "üìπ Stories", "engagement": "1,900", "format": "–ë—ã—Å—Ç—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", "platform": "Instagram"},
            {"type": "üì∞ –¢–µ–∫—Å—Ç–æ–≤–æ–µ", "engagement": "1,500", "format": "–ö–µ–π—Å-–∏—Å—Ç–æ—Ä–∏—è", "platform": "Facebook"}
        ]
        
        for i, creative in enumerate(creatives, 1):
            st.markdown(f"""
            <div class="competitor-card">
                <strong>#{i} {creative['type']}</strong><br>
                üí´ –í–æ–≤–ª–µ—á–µ–Ω–∏–µ: {creative['engagement']}<br>
                üé® –§–æ—Ä–º–∞—Ç: {creative['format']}<br>
                üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {creative['platform']}
            </div>
            """, unsafe_allow_html=True)
        
        st.subheader("üí° –ò–Ω—Å–∞–π—Ç—ã")
        st.markdown("""
        **üî• –¢—Ä–µ–Ω–¥—ã –Ω–µ–¥–µ–ª–∏:**
        - –í–∏–¥–µ–æ-–æ—Ç–∑—ã–≤—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ 40% –ª—É—á—à–µ
        - –°–ª–æ–≤–æ "–≥–∞—Ä–∞–Ω—Ç–∏—è" –ø–æ–≤—ã—à–∞–µ—Ç CTR –Ω–∞ 25%
        - –ö—Ä–µ–∞—Ç–∏–≤—ã —Å —Ü–∏—Ñ—Ä–∞–º–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ +15% –∫ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
        """)

with tab2:
    st.header("üé® –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–µ–∞—Ç–∏–≤–æ–≤")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞")
        
        product_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫—É—Ä—Å–∞/–ø—Ä–æ–¥—É–∫—Ç–∞", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—É—Ä—Å –ø–æ Instagram-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É")
        target_audience = st.text_input("–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏ 25-40 –ª–µ—Ç")
        unique_value = st.text_area("–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", placeholder="–ß—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ –≤ –≤–∞—à–µ–º –∫—É—Ä—Å–µ?")
        
        creative_type = st.selectbox(
            "–¢–∏–ø –∫—Ä–µ–∞—Ç–∏–≤–∞",
            ["–ü—Ä–æ–¥–∞—é—â–∏–π –ø–æ—Å—Ç", "–í–∏–¥–µ–æ-—Å–∫—Ä–∏–ø—Ç", "–°—Ç–æ—Ä–∏—Å", "Email –ø–∏—Å—å–º–æ", "–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞"]
        )
        
        platform = st.selectbox(
            "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞",
            ["Facebook/Instagram", "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", "–Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç", "Google Ads", "Telegram"]
        )
        
        if st.button("‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤—ã", type="primary"):
            with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫—Ä–µ–∞—Ç–∏–≤—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫..."):
                st.success("üéâ –°–æ–∑–¥–∞–Ω–æ 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤!")
                
                # –ú–æ–∫-—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫—Ä–µ–∞—Ç–∏–≤—ã
                generated_ads = [
                    {
                        "title": "üî• –í–∞—Ä–∏–∞–Ω—Ç 1: –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π",
                        "headline": f"–£—Å—Ç–∞–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –∫–æ–≥–æ-—Ç–æ? –û—Å–≤–æ–π—Ç–µ {product_name}",
                        "description": "–ó–∞ 30 –¥–Ω–µ–π –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ —Ö–æ–±–±–∏ –≤ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞. 2,000+ –¥–æ–≤–æ–ª—å–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —É–∂–µ –∏–∑–º–µ–Ω–∏–ª–∏ —Å–≤–æ—é –∂–∏–∑–Ω—å",
                        "cta": "–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ —Å–µ–π—á–∞—Å",
                        "score": "9.2/10"
                    },
                    {
                        "title": "üí∞ –í–∞—Ä–∏–∞–Ω—Ç 2: –í—ã–≥–æ–¥–∞",
                        "headline": f"{product_name}: –û—Ç 0 –¥–æ 100,000‚ÇΩ –≤ –º–µ—Å—è—Ü",
                        "description": "–ü–æ—à–∞–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞. –ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ 14 –¥–Ω–µ–π –∏–ª–∏ –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏",
                        "cta": "–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø",
                        "score": "8.8/10"
                    },
                    {
                        "title": "‚è∞ –í–∞—Ä–∏–∞–Ω—Ç 3: –°—Ä–æ—á–Ω–æ—Å—Ç—å",
                        "headline": "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è! –°–∫–∏–¥–∫–∞ 50% –Ω–∞ –∫—É—Ä—Å",
                        "description": f"–¢–æ–ª—å–∫–æ –¥–æ 31 –¥–µ–∫–∞–±—Ä—è - {product_name} –∑–∞ –ø–æ–ª—Ü–µ–Ω—ã. –ú–µ—Å—Ç–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã!",
                        "cta": "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ",
                        "score": "8.5/10"
                    }
                ]
                
                for ad in generated_ads:
                    with st.expander(ad["title"]):
                        st.markdown(f"**–ó–∞–≥–æ–ª–æ–≤–æ–∫:** {ad['headline']}")
                        st.markdown(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {ad['description']}")
                        st.markdown(f"**–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é:** {ad['cta']}")
                        st.markdown(f"**AI –û—Ü–µ–Ω–∫–∞:** {ad['score']}")
                        
                        col_copy, col_test = st.columns(2)
                        with col_copy:
                            if st.button(f"üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å", key=f"copy_{ad['title']}"):
                                st.success("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!")
                        with col_test:
                            if st.button(f"üß™ A/B —Ç–µ—Å—Ç", key=f"test_{ad['title']}"):
                                st.info("–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø–ª–∞–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    with col2:
        st.subheader("üìä –ü—Ä–æ–≥–Ω–æ–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        
        # –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑–∞
        prediction_data = pd.DataFrame({
            '–¢–∏–ø –∫—Ä–µ–∞—Ç–∏–≤–∞': ['–í–∏–¥–µ–æ-–æ—Ç–∑—ã–≤', '–ö–∞—Ä—É—Å–µ–ª—å', '–û–¥–Ω–æ —Ñ–æ—Ç–æ', 'UGC –≤–∏–¥–µ–æ', '–ê–Ω–∏–º–∞—Ü–∏—è'],
            '–ü—Ä–æ–≥–Ω–æ–∑ CTR': [3.2, 2.8, 2.1, 4.1, 2.5],
            '–ü—Ä–æ–≥–Ω–æ–∑ CPC': [25, 32, 45, 22, 38],
            '–†–∞–∑–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏': [2.1, 1.8, 3.2, 1.9, 2.4]
        })
        
        fig = px.scatter(
            prediction_data, 
            x='–ü—Ä–æ–≥–Ω–æ–∑ CPC', 
            y='–ü—Ä–æ–≥–Ω–æ–∑ CTR',
            size='–†–∞–∑–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏',
            color='–¢–∏–ø –∫—Ä–µ–∞—Ç–∏–≤–∞',
            title="–ü—Ä–æ–≥–Ω–æ–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ —Ç–∏–ø–∞–º –∫—Ä–µ–∞—Ç–∏–≤–æ–≤",
            labels={'–ü—Ä–æ–≥–Ω–æ–∑ CPC': '–¶–µ–Ω–∞ –∫–ª–∏–∫–∞ (‚ÇΩ)', '–ü—Ä–æ–≥–Ω–æ–∑ CTR': 'CTR (%)'}
        )
        st.plotly_chart(fig, use_container_width=True)
        
        st.subheader("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é")
        
        recommendations = [
            "üìπ –î–æ–±–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç–∑—ã–≤—ã - –æ–Ω–∏ –ø–æ–≤—ã—à–∞—é—Ç –¥–æ–≤–µ—Ä–∏–µ –Ω–∞ 60%",
            "üî• –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö - —Ä–æ—Å—Ç CTR –Ω–∞ 25%",
            "üí∞ –ü–æ–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≤—ã–≥–æ–¥—É –≤ —Ü–∏—Ñ—Ä–∞—Ö",
            "‚è∞ –î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ ('–¢–æ–ª—å–∫–æ 3 –¥–Ω—è!')",
            "üë• –í–∫–ª—é—á–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ('2000+ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤')"
        ]
        
        for rec in recommendations:
            st.markdown(f"‚Ä¢ {rec}")

with tab3:
    st.header("üìà –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–∞–º–ø–∞–Ω–∏–π")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞—É–¥–∏—Ç–æ—Ä–∏—è–º")
        
        audiences = [
            {
                "name": "Lookalike 1% - –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∫—É—Ä—Å–æ–≤", 
                "score": 9.2, 
                "size": "2.1M", 
                "cpc": "22‚ÇΩ",
                "description": "–ü–æ—Ö–æ–∂–∏–µ –Ω–∞ –≤–∞—à–∏—Ö –ª—É—á—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤"
            },
            {
                "name": "–ò–Ω—Ç–µ—Ä–µ—Å—ã: –û–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã + –ü–æ–≤–µ–¥–µ–Ω–∏–µ: –ü–æ–∫—É–ø–∫–∏ –æ–Ω–ª–∞–π–Ω", 
                "score": 8.7, 
                "size": "890K", 
                "cpc": "28‚ÇΩ",
                "description": "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è"
            },
            {
                "name": "–†–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥: –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ —Å–∞–π—Ç–∞ (30 –¥–Ω–µ–π)", 
                "score": 8.9, 
                "size": "45K", 
                "cpc": "18‚ÇΩ",
                "description": "–¢–µ–ø–ª–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è —Å —Å–∞–π—Ç–∞"
            }
        ]
        
        for audience in audiences:
            st.markdown(f"""
            <div class="competitor-card">
                <strong>{audience['name']}</strong><br>
                üèÜ AI –û—Ü–µ–Ω–∫–∞: {audience['score']}/10<br>
                üë• –†–∞–∑–º–µ—Ä: {audience['size']}<br>
                üí∞ CPC: {audience['cpc']}<br>
                üìù {audience['description']}
            </div>
            """, unsafe_allow_html=True)
    
    with col2:
        st.subheader("üí∞ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞")
        
        # –î–∞–Ω–Ω—ã–µ –ø–æ –±—é–¥–∂–µ—Ç—É
        budget_data = pd.DataFrame({
            '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞': ['Facebook/Instagram', 'Google Ads', '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ', '–Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç'],
            '–¢–µ–∫—É—â–µ–µ': [40, 35, 15, 10],
            '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è': [45, 30, 15, 10],
            'ROI': [320, 280, 250, 200]
        })
        
        fig = go.Figure(data=[
            go.Bar(name='–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ', x=budget_data['–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞'], y=budget_data['–¢–µ–∫—É—â–µ–µ']),
            go.Bar(name='AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è', x=budget_data['–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞'], y=budget_data['–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è'])
        ])
        fig.update_layout(barmode='group', title="–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ (%)")
        st.plotly_chart(fig, use_container_width=True)
        
        st.subheader("‚è∞ –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–µ–∫–ª–∞–º—ã")
        
        # –ì—Ä–∞—Ñ–∏–∫ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        time_data = pd.DataFrame({
            '–ß–∞—Å': list(range(24)),
            '–ö–æ–Ω–≤–µ—Ä—Å–∏—è': [1.2, 0.8, 0.5, 0.3, 0.4, 0.8, 1.5, 2.1, 2.8, 3.2, 3.5, 3.8, 
                         3.2, 2.9, 3.1, 3.6, 4.2, 4.8, 4.1, 3.5, 2.8, 2.1, 1.8, 1.5]
        })
        
        fig_time = px.line(time_data, x='–ß–∞—Å', y='–ö–æ–Ω–≤–µ—Ä—Å–∏—è', 
                          title="–ö–æ–Ω–≤–µ—Ä—Å–∏—è –ø–æ —á–∞—Å–∞–º (—Å—Ä–µ–¥–Ω—è—è –∑–∞ –Ω–µ–¥–µ–ª—é)")
        fig_time.add_hline(y=time_data['–ö–æ–Ω–≤–µ—Ä—Å–∏—è'].mean(), line_dash="dash", 
                          annotation_text="–°—Ä–µ–¥–Ω—è—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è")
        st.plotly_chart(fig_time, use_container_width=True)

with tab4:
    st.header("ü§ñ AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –∏–Ω—Å–∞–π—Ç—ã")
    
    # AI –ò–Ω—Å–∞–π—Ç—ã
    insights = [
        {
            "type": "üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å",
            "title": "–ù–µ–¥–æ–æ—Ü–µ–Ω–µ–Ω–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ",
            "description": "–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ '—Å–æ–∑–¥–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω –∫—É—Ä—Å–æ–≤' –∏–º–µ–µ—Ç —Ü–µ–Ω—É –Ω–∞ 40% –Ω–∏–∂–µ –ø–æ—Ö–æ–∂–∏—Ö. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç –Ω–∞ 15,000‚ÇΩ/–º–µ—Å—è—Ü.",
            "impact": "–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –ª–∏–¥–æ–≤ –Ω–∞ 25%",
            "priority": "high"
        },
        {
            "type": "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ", 
            "title": "–£—Å—Ç–∞–ª–æ—Å—Ç—å –∫—Ä–µ–∞—Ç–∏–≤–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞",
            "description": "–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥–µ–æ-–∫—Ä–µ–∞—Ç–∏–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–Ω–∏–∂–µ–Ω–∏–µ CTR –Ω–∞ 15% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π. –í—Ä–µ–º—è –æ–±–Ω–æ–≤–∏—Ç—å –∫—Ä–µ–∞—Ç–∏–≤.",
            "impact": "–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–æ—Å—Ç–∞ CPC",
            "priority": "urgent"
        },
        {
            "type": "üìä –ò–Ω—Å–∞–π—Ç",
            "title": "–õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–∫–∞–∑–æ–≤",
            "description": "–í—Ç–æ—Ä–Ω–∏–∫ 14:00-16:00 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 35% –≤—ã—à–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É–≤–µ–ª–∏—á–∏—Ç—å —Å—Ç–∞–≤–∫–∏ –≤ —ç—Ç–æ –≤—Ä–µ–º—è.",
            "impact": "–ú–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å ROAS –Ω–∞ 12-18%",
            "priority": "medium"
        },
        {
            "type": "üí° –°–æ–≤–µ—Ç",
            "title": "–ù–æ–≤—ã–π —Ç—Ä–µ–Ω–¥ –≤ –Ω–∏—à–µ",
            "description": "–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –Ω–∞—á–∞–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç '–∏—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞ –∑–∞ 30 –¥–Ω–µ–π'. –ö–æ–Ω–≤–µ—Ä—Å–∏—è —Ç–∞–∫–∏—Ö –∫—Ä–µ–∞—Ç–∏–≤–æ–≤ –≤—ã—à–µ –Ω–∞ 28%.",
            "impact": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ñ–æ—Ä–º–∞—Ç",
            "priority": "low"
        }
    ]
    
    for insight in insights:
        priority_color = {"urgent": "#dc2626", "high": "#ea580c", "medium": "#ca8a04", "low": "#16a34a"}
        border_color = priority_color.get(insight["priority"], "#16a34a")
        
        st.markdown(f"""
        <div style="border-left: 4px solid {border_color}; background: #f8fafc; padding: 1rem; margin: 1rem 0; border-radius: 0 8px 8px 0;">
            <h4>{insight['type']} {insight['title']}</h4>
            <p>{insight['description']}</p>
            <small><strong>–û–∂–∏–¥–∞–µ–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç:</strong> {insight['impact']}</small>
        </div>
        """, unsafe_allow_html=True)
    
    st.divider()
    
    # AI –ß–∞—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    st.subheader("üí¨ –°–ø—Ä–æ—Å–∏—Ç–µ AI-—ç–∫—Å–ø–µ—Ä—Ç–∞ –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É")
    
    # –ë—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    quick_questions = [
        "–ö–∞–∫ —Å–Ω–∏–∑–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–∏–¥–∞?",
        "–ö–∞–∫–∏–µ –∫—Ä–µ–∞—Ç–∏–≤—ã —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞—é—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ?", 
        "–°—Ç–æ–∏—Ç –ª–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –±—é–¥–∂–µ—Ç –Ω–∞ Facebook?",
        "–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é –ª–µ–Ω–¥–∏–Ω–≥–∞?"
    ]
    
    cols = st.columns(2)
    for i, question in enumerate(quick_questions):
        with cols[i % 2]:
            if st.button(f"üí° {question}", key=f"quick_{i}"):
                st.session_state['ai_question'] = question
    
    user_question = st.text_input("–ò–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è—Ö...")
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å (–∏–∑ –±—ã—Å—Ç—Ä—ã—Ö –∏–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π)
    current_question = st.session_state.get('ai_question', user_question)
    
    if current_question:
        with st.spinner("AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ..."):
            # –ú–æ–∫ AI –æ—Ç–≤–µ—Ç–∞
            ai_response = f"""
            **–ê–Ω–∞–ª–∏–∑ –ø–æ –≤–æ–ø—Ä–æ—Å—É:** "{current_question}"
            
            üìä **–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö:** –í–∞—à–∏ –∫–∞–º–ø–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø–æ —Ä—ã–Ω–∫—É (CTR: 2.4% –ø—Ä–æ—Ç–∏–≤ 1.8% —Å—Ä–µ–¥–Ω–µ–≥–æ)
            
            üéØ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ - –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –≤ –≤–∞—à–µ–π –Ω–∏—à–µ –≤–∏–¥—è—Ç —Ä–æ—Å—Ç –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞ 40% —Å —Ç–∞–∫–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º
            
            üìà **–ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π:**
            1. üß™ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤
            2. üí∞ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ —Å–∞–º—ã–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏  
            3. üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π
            4. üîÑ –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
            
            **üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:**
            - –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –≤ –∫—Ä–µ–∞—Ç–∏–≤—ã
            - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
            - –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞ –Ω–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å–∞–π—Ç–∞
            """
            
            st.markdown(ai_response)
            
            # –°–±—Ä–æ—Å –≤–æ–ø—Ä–æ—Å–∞
            if 'ai_question' in st.session_state:
                del st.session_state['ai_question']
    
    # –†–∞–∑–¥–µ–ª —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
    st.divider()
    st.subheader("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä—ã–Ω–∫–æ–º")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("""
        **üéØ –í–∞—à–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:**
        - CTR: 2.4% 
        - CPC: 28‚ÇΩ
        - –ö–æ–Ω–≤–µ—Ä—Å–∏—è: 3.2%
        - ROAS: 320%
        """)
    
    with col2:
        st.markdown("""
        **üìà –°—Ä–µ–¥–Ω–∏–µ –ø–æ —Ä—ã–Ω–∫—É:**
        - CTR: 1.8%
        - CPC: 35‚ÇΩ  
        - –ö–æ–Ω–≤–µ—Ä—Å–∏—è: 2.1%
        - ROAS: 280%
        """)
    
    with col3:
        st.markdown("""
        **üèÜ –¢–æ–ø-10% —à–∫–æ–ª:**
        - CTR: 3.8%
        - CPC: 22‚ÇΩ
        - –ö–æ–Ω–≤–µ—Ä—Å–∏—è: 5.1% 
        - ROAS: 450%
        """)

# –§—É—Ç–µ—Ä
st.divider()
col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("ü§ñ **–ù–∞ –±–∞–∑–µ Claude 4 + MCP —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π**")
with col2:
    st.markdown(f"üïí **–û–±–Ω–æ–≤–ª–µ–Ω–æ:** {datetime.now().strftime('%d.%m.%Y %H:%M')}")
with col3:
    st.markdown("üìß **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** support@ai-marketing.ru")

# –°–∫—Ä—ã—Ç–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
with st.expander("üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"):
    st.markdown("""
    **–°—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π:**
    - ‚úÖ Facebook Marketing API - –ø–æ–¥–∫–ª—é—á–µ–Ω–æ
    - ‚úÖ Google Ads API - –ø–æ–¥–∫–ª—é—á–µ–Ω–æ  
    - ‚è≥ VK Ads API - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
    - ‚è≥ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç API - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
    - ‚è≥ GetCourse API - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
    
    **–í–µ—Ä—Å–∏—è:** MVP 1.0  
    **–ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–ø–ª–æ–π:** {datetime.now().strftime('%d.%m.%Y %H:%M')}
    """)
